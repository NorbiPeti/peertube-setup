version: "3.3"

services:

  traefik:
    image: traefik:1.7-alpine
    command: --docker # Tells Tr√¶fik to listen to docker
    ports:
      - "80:80"     # The HTTP port
      - "443:443"   # The HTTPS port
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
      - ./docker-volume/traefik/acme.json:/etc/acme.json
      - ./traefik.toml:/traefik.toml
    restart: "always"
    # If you want to use the Traefik dashboard, you should expose it on a 
    # subdomain with HTTPS and authentification:
    # https://medium.com/@xavier.priour/secure-traefik-dashboard-with-https-and-password-in-docker-5b657e2aa15f
    # https://github.com/containous/traefik/issues/880#issuecomment-310301168

  peertube:
    image: chocobozzz/peertube:v1.2.1-stretch
    env_file:
      - .env
    labels:
      traefik.enable: "true"
      traefik.frontend.rule: "Host:${PEERTUBE_WEBSERVER_HOSTNAME}"
      traefik.port: "9000"
    volumes:
      - ./docker-volume/data:/data
      - ./docker-volume/config:/config
    depends_on:
      - postgres
      - redis
      - postfix
    restart: "always"

  postgres:
    image: postgres:10-alpine
    environment:
      POSTGRES_USER: ${PEERTUBE_DB_USERNAME}
      POSTGRES_PASSWORD: ${PEERTUBE_DB_PASSWORD}
      POSTGRES_DB: peertube
    volumes:
      - ./docker-volume/db:/var/lib/postgresql/data
    restart: "always"
    labels:
      traefik.enable: "false"

  redis:
    image: redis:5-alpine
    volumes:
      - ./docker-volume/redis:/data
    restart: "always"
    labels:
      - "traefik.enable=false"

  postfix:
    image: mwader/postfix-relay
    environment:
      - POSTFIX_myhostname=${PEERTUBE_WEBSERVER_HOSTNAME}
    labels:
      traefik.enable: "false"
    restart: "always"
